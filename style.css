/* nejsme vcerejsi, pouzivame moderni box model */
html { box-sizing: border-box; }
*, :after, :before { box-sizing: inherit; }


body {
	margin: 0;
	padding: 30px;
	font-family:  'Alice', serif;
	font-size: 18px;
	line-height: 1.5;
}

h1, h2, h3 {
	font-family: 'Kaushan Script', cursive;
	font-weight: normal;
	margin: 0;
}

blockquote {
	font-family: 'Kaushan Script', cursive;
}

/* --------------------------------------------------- */

/* barvy */
:root {
	--svetla: #edf3f5;
	--seda: #b2bec3;
	--tmava: #636e72;
	--oranzova: #ee5a24;
	--cervena: #ea2027;
	--zluta: #f79f1f;
	--zelena: #a3cb38;
	--limetka: #c4e538;
}

/*
	Všimni si, jak jsou zde nadefinované barvy.
	Potřebný kód barvy si odtamtud můžeš vyzobnout a použít
	ve svém kódu, ale existuje i lepší způsob.

  CSS custom properties, někdy také označované jako CSS
	variables (CSS proměnné), je způsob, jak si	pojmenovat
	nějakou hodnotu a potom ji v kódu opakovaně používat.
	Často se používá právě pro barvy a další "nastavení".

	Když si chci nějakou hodnotu nadefinovat, použiji zápis
	--mujnazev: hodnota
	Když chci, abych mohl hodnotu používat všude v CSS,
	založím ji uvnitř selektoru :root, takže např.:
	:root {
		--mojebarva: #ff8800;
	}

	Chci-li potom dál v CSS hodnotu použít, stačí použít funkci var a v závorce název proměnné.Např.:
	.odstavec {
		color: var(--mojebarva);
	}

	Nemusím si tak pamatovat kódy barev nebo neustále v CSS jezdit nahoru a dolů, abych si je odněkud zkopíroval.

	Více o CSS custom properties:
	- https://www.w3schools.com/css/css3_variables.asp
	- https://css-tricks.com/patterns-for-practical-css-custom-properties-use/
	- https://www.smashingmagazine.com/2017/04/start-using-css-custom-properties/
*/


.blog {
	display: grid;
	grid-template-columns: 1fr 4fr 2fr; 
	grid-template-rows: repeat(20, auto);
	gap: 0 40px;
	color: black;
}

.blog header {
	grid-column: 2 / 3;
	grid-row: 1;
} 

.blog header p {
	color: #b2bec3;
}

.blog p,
.blog h2,
.blog footer {
	grid-column: 2 / 3;
}

.blog blockquote {
	grid-column: 1 / -1;
	text-align: center;
	font-size: 36px;
	color: #b2bec3;
}

.blog blockquote::after,
.blog blockquote::before {
	content: "";
	display: block;
	width: 100px;
	height: 3px;
	background-color: #c4e538;
	margin: 20px auto;
}

.tip {
	height: max-content;
	background-color:#edf3f5;
	
}

.tip a {
	color: #ea2027;
}

.tip-vlevo {
	grid-column: 1 / 2;
	padding: 20px;
	text-align: right;
	border-right: 3px solid #f79f1f;
}

.tip-vlevo img {
	width: 100%;
	margin-bottom: 20px;
}

.tip-vpravo {
	grid-column: -1 / -2;
	text-align: left;
	padding: 20px;
	border-left: 3px solid #f79f1f;
}

.tip p {
	margin-bottom: 0;
	font-size: 14px;
}

.blog figure {
	grid-column: 1 / 4;
	color: #b2bec3;
	margin-left: 0;
	margin-right: 0;
}

.blog figure img {
	width: 100%;
    object-fit: cover;
}

.blog footer,
.blog footer a {
	color: #b2bec3;
	font-size: 12px;
}

h1,
h2 {
	color:#a3cb38;
	margin-top: 0.5em;
	margin-bottom: 0.5em
}

h1 {
	font-size: 72px;
}

h2 {
	font-size: 56px
}

p {
	margin-top: 0;
}

